{"version":3,"sources":["reducers/reposReducer.js","components/actions/repos.js","components/searchInput.jsx","components/reposContainer.jsx","components/main/Main.jsx","utils/pagesCreator.js","components/repo.jsx","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["SET_REPOS","SET_IS_FETCHING","SET_CURRENT_PAGE","SET_FETCH_ERROR","defaultState","items","isFetching","currentPage","perPage","totalCount","isFetchError","setRepos","type","payload","setIsFetching","bool","setCurrentPage","page","setFetchError","getRepos","searchQuery","dispatch","a","axios","get","response","data","setTimeout","getCurrentRepo","username","reponame","setRepo","useStyles","makeStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","SearchInput","setSearchValue","searchValue","classes","useDispatch","Paper","component","className","InputBase","placeholder","inputProps","value","onChange","e","target","IconButton","onClick","aria-label","margin","media","height","link","textDecoration","linkContainer","stars","fontWeight","lastCommit","starIcon","color","ReposContainer","props","repo","Card","CardContent","Typography","gutterBottom","variant","to","owner","login","name","stargazers_count","updated_at","href","html_url","justifyContent","Main","repos","useSelector","state","useState","pages","pagesCount","i","push","createPages","Math","ceil","useEffect","Alert","severity","AlertTitle","CircularProgress","map","index","flexWrap","Repo","useParams","elevation","history","goBack","src","avatar_url","alt","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","total_count","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65e32dd7.chunk.js","sourcesContent":["const SET_REPOS = 'SET_REPOS'\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_FETCH_ERROR = 'SET_FETCH_ERROR'\r\n\r\n\r\nconst defaultState = {\r\n    items: [],\r\n    isFetching: true,\r\n    currentPage: 1,\r\n    perPage: 10,\r\n    totalCount: 0,\r\n    isFetchError: false\r\n}\r\n\r\nexport const reposReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_REPOS:\r\n            return {\r\n                ...state,\r\n                items: action.payload.items,\r\n                totalCount: action.payload.total_count,\r\n                isFetching: false\r\n            }\r\n        case SET_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.payload\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload\r\n            }\r\n        case SET_FETCH_ERROR:\r\n            return {\r\n                ...state,\r\n                isFetchError: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setRepos = (items) => ({type: SET_REPOS, payload: items})\r\nexport const setIsFetching = (bool) => ({type: SET_IS_FETCHING, payload: bool})\r\nexport const setCurrentPage = (page) => ({type: SET_CURRENT_PAGE, payload: page})\r\nexport const setFetchError = (bool) => ({type: SET_FETCH_ERROR, payload: bool})","import axios from \"axios\";\r\nimport {setFetchError, setIsFetching, setRepos} from \"../../reducers/reposReducer\";\r\n\r\n\r\nexport const getRepos = (searchQuery = \"stars:%3E1\", currentPage, perPage) => {\r\n    if (searchQuery == \"\") {\r\n        searchQuery = \"stars:%3E1\"\r\n    }\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(setIsFetching(true))\r\n            const response = await axios.get(`https://api.github.com/search/repositories?q=${searchQuery}&sort=stars&page=${currentPage}&per_page=${perPage}`)\r\n            dispatch(setRepos(response.data))\r\n        } catch (e) {\r\n            dispatch(setFetchError(true))\r\n            dispatch(setIsFetching(false))\r\n            setTimeout(() => {\r\n                dispatch(setFetchError(false))\r\n            }, 2000)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCurrentRepo = async (username, reponame, setRepo) => {\r\n    const response = await axios.get(`https://api.github.com/repos/${username}/${reponame}`)\r\n    setRepo(response.data)\r\n}","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getRepos} from \"./actions/repos\";\r\nimport {setCurrentPage} from \"../reducers/reposReducer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(3),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    }\r\n}));\r\n\r\nexport const SearchInput = ({setSearchValue, searchValue}) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n\r\n    const searchHandler = (e) => {\r\n        dispatch(setCurrentPage(1))\r\n        dispatch(getRepos(searchValue))\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Search Repos\"\r\n                inputProps={{'aria-label': 'search repos'}}\r\n                value={searchValue}\r\n                onChange={(e) => {\r\n                    setSearchValue(e.target.value)\r\n                }}\r\n            />\r\n            <IconButton onClick={() => searchHandler()} className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n        </Paper>\r\n    );\r\n}","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        margin: '20px 0'\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    linkContainer: {\r\n        display: 'flex'\r\n    },\r\n    stars: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    fontWeight: {\r\n        fontWeight: 'bold'\r\n    },\r\n    lastCommit: {\r\n        display: \"flex\"\r\n    },\r\n    starIcon: {\r\n        color: 'yellow'\r\n    }\r\n});\r\n\r\nexport const ReposContainer = (props) => {\r\n\r\n    const repo = props.repo\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    <NavLink className={classes.link} to={`/repo/${repo.owner.login}/${repo.name}`}>{repo.name}</NavLink>\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    <div className={classes.stars}>\r\n                        <div className={classes.fontWeight}>Количество звезд</div>\r\n                        : <StarIcon className={classes.starIcon}/>\r\n                        {repo.stargazers_count}\r\n                    </div>\r\n                    <div className={classes.lastCommit}>\r\n                        <div className={classes.fontWeight}>Последний коммит</div>\r\n                        : {repo.updated_at}\r\n                    </div>\r\n                    <div className={classes.linkContainer}>\r\n                        <div className={classes.fontWeight}>Ссылка на репозиторий</div>\r\n                        : <a className={classes.link} href={repo.html_url}>{repo.html_url}</a>\r\n                    </div>\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {SearchInput} from \"../searchInput\";\r\nimport {ReposContainer} from \"../reposContainer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getRepos} from \"../actions/repos\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {setCurrentPage} from \"../../reducers/reposReducer\";\r\nimport {createPages} from \"../../utils/pagesCreator\";\r\nimport './Main.css';\r\nimport {Alert, AlertTitle} from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: '30vh auto'\r\n    },\r\n}));\r\n\r\nexport const Main = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const repos = useSelector(state => state.repos.items)\r\n    const isFetching = useSelector(state => state.repos.isFetching)\r\n    const currentPage = useSelector(state => state.repos.currentPage)\r\n    const perPage = useSelector(state => state.repos.perPage)\r\n    const totalCount = useSelector(state => state.repos.totalCount)\r\n    const isFetchError = useSelector(state => state.repos.isFetchError)\r\n\r\n    const [searchValue, setSearchValue] = useState('')\r\n\r\n    const pagesCount = Math.ceil(totalCount / perPage)\r\n    const pages = []\r\n\r\n    createPages(pages, pagesCount, currentPage)\r\n\r\n    useEffect(() => {\r\n        dispatch(getRepos(searchValue, currentPage, perPage))\r\n    }, [currentPage])\r\n\r\n    return (\r\n        <div>\r\n            {isFetchError &&\r\n            <Alert severity=\"error\">\r\n                <AlertTitle>Error</AlertTitle>\r\n                Произошла ошибка! — <strong>Пожалуйста, обновите страницу!</strong>\r\n            </Alert>\r\n            }\r\n\r\n            <SearchInput searchValue={searchValue} setSearchValue={setSearchValue}/>\r\n            {!isFetching ?\r\n                repos.map(repo => {\r\n                    return <ReposContainer repo={repo}/>\r\n                })\r\n                : <div className={classes.root}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            }\r\n\r\n            <div className=\"pages\">\r\n                {pages.map((page, index) => <span\r\n                    key={index}\r\n                    className={currentPage == page ? \"current-page\" : \"page\"}\r\n                    onClick={() => dispatch(setCurrentPage(page))}\r\n                >{page}</span>)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","export function createPages(pages, pagesCount, currentPage) {\r\n    if (pagesCount > 10) {\r\n        if (currentPage > 5) {\r\n            for (let i = currentPage - 4; i <= currentPage + 5; i++) {\r\n                pages.push(i)\r\n                if (i == pagesCount) break\r\n            }\r\n        } else {\r\n            for (let i = 1; i <= 10; i++) {\r\n                pages.push(i)\r\n                if (i == pagesCount) break\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getCurrentRepo} from \"./actions/repos\";\r\nimport './repo.css';\r\nimport {Paper} from \"@material-ui/core\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    linkContainer: {\r\n        display: 'flex'\r\n    },\r\n    stars: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    fontWeight: {\r\n        fontWeight: 'bold'\r\n    },\r\n    lastCommit: {\r\n        display: \"flex\",\r\n        margin: '5px 0'\r\n    },\r\n    starIcon: {\r\n        color: 'yellow'\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            padding: theme.spacing(3),\r\n            width: theme.spacing(100),\r\n            height: theme.spacing(75),\r\n        }\r\n    }\r\n}));\r\n\r\nexport const Repo = (props) => {\r\n    const classes = useStyles();\r\n    const {username, reponame} = useParams()\r\n    const [repo, setRepo] = useState({owner: {}})\r\n\r\n    useEffect(() => {\r\n        getCurrentRepo(username, reponame, setRepo)\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper elevation={3}>\r\n                <button onClick={() => props.history.goBack()}>back</button>\r\n                <div>\r\n                    <div className=\"info\">\r\n                        <img className=\"image\" src={repo.owner.avatar_url} alt=\"\"/>\r\n                        <div className=\"name\">{repo.name}</div>\r\n                    </div>\r\n                    <div className={classes.stars}>\r\n                        <div className={classes.fontWeight}>Количество звезд</div>\r\n                        : <StarIcon className={classes.starIcon}/>\r\n                        {repo.stargazers_count}\r\n                    </div>\r\n                    <div className={classes.lastCommit}>\r\n                        <div className={classes.fontWeight}>Последний коммит</div>\r\n                        : {repo.updated_at}\r\n                    </div>\r\n                    <div className={classes.linkContainer}>\r\n                        <div className={classes.fontWeight}>Ссылка на репозиторий</div>\r\n                        : <a className={classes.link} href={repo.html_url}>{repo.html_url}</a>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n","import './App.css';\nimport {BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport {Main} from \"./components/main/Main\";\nimport {Repo} from \"./components/repo\";\nimport React from \"react\";\n\nfunction App() {\n\n    return (\n            <div className=\"app\">\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path='/' component={Main}/>\n                        <Route path='/repo/:username/:reponame' component={Repo}/>\n                        <Redirect to='/'/>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {reposReducer} from \"./reposReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    repos: reposReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./reducers\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}